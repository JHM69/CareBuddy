package com.beffjezos.carebuddy.ui.activities;import android.app.ProgressDialog;import android.content.Intent;import android.os.Bundle;import android.view.View;import android.widget.Button;import android.widget.EditText;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import com.beffjezos.carebuddy.R;import com.beffjezos.carebuddy.models.Charity;import com.google.android.gms.tasks.OnCompleteListener;import com.google.android.gms.tasks.OnSuccessListener;import com.google.android.gms.tasks.Task;import com.google.android.gms.tasks.TaskExecutors;import com.google.firebase.FirebaseException;import com.google.firebase.auth.AuthResult;import com.google.firebase.auth.FirebaseAuth;import com.google.firebase.auth.PhoneAuthCredential;import com.google.firebase.auth.PhoneAuthProvider;import com.google.firebase.database.DatabaseReference;import com.google.firebase.database.FirebaseDatabase;import java.util.concurrent.TimeUnit;public class VerifyActivity extends AppCompatActivity {    ProgressDialog mDialog;    Charity charity;    private String verificationId;    private FirebaseAuth firebaseAuth;    private EditText otpEt;    private DatabaseReference mainDB;    private String number;    private PhoneAuthProvider.OnVerificationStateChangedCallbacks            mCallBack = new PhoneAuthProvider.OnVerificationStateChangedCallbacks() {        @Override        public void onCodeSent(String s, PhoneAuthProvider.ForceResendingToken forceResendingToken) {            super.onCodeSent(s, forceResendingToken);            verificationId = s;            Toast.makeText(VerifyActivity.this, "check message.", Toast.LENGTH_SHORT).show();        }        @Override        public void onVerificationCompleted(PhoneAuthCredential phoneAuthCredential) {            String code = phoneAuthCredential.getSmsCode();            if (code != null) {                otpEt.setText(code);                verifyCode(code);            }        }        @Override        public void onVerificationFailed(@NonNull FirebaseException e) {            Toast.makeText(VerifyActivity.this, e.getMessage(), Toast.LENGTH_LONG).show();        }    };    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_verify);        firebaseAuth = FirebaseAuth.getInstance();        otpEt = findViewById(R.id.editText);        final Button next = findViewById(R.id.button);        mDialog = new ProgressDialog(this);        mDialog.setMessage("Please wait..");        mDialog.setIndeterminate(true);        mDialog.setCancelable(false);        mDialog.setCanceledOnTouchOutside(false);        mainDB = FirebaseDatabase.getInstance().getReference();        charity = (Charity) getIntent().getSerializableExtra("data");        assert charity != null;        sendVerificationCode(charity.getNumber());        next.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                String code = otpEt.getText().toString().trim();                if (code.isEmpty() || code.length() < 6) {                    otpEt.setError("code must be 6 character long...");                    otpEt.requestFocus();                    return;                }                try {                    verifyCode(code);                } catch (Exception e) {                    e.printStackTrace();                    Toast.makeText(VerifyActivity.this, "en error occurs. go back and try again", Toast.LENGTH_SHORT).show();                }            }        });    }    private void verifyCode(String code) {        PhoneAuthCredential credential = PhoneAuthProvider.getCredential(verificationId, code);        signInWithCredential(credential);    }    private void signInWithCredential(PhoneAuthCredential credential) {        mDialog.show();        firebaseAuth.signInWithCredential(credential)                .addOnCompleteListener(new OnCompleteListener<AuthResult>() {                    @Override                    public void onComplete(@NonNull Task<AuthResult> task) {                        if (task.isSuccessful()) {                            firebaseAuth = FirebaseAuth.getInstance();                            charity.setId(firebaseAuth.getCurrentUser().getUid());                            mainDB.child("Charities").child(firebaseAuth.getCurrentUser().getUid()).setValue(charity).addOnSuccessListener(new OnSuccessListener<Void>() {                                @Override                                public void onSuccess(Void aVoid) {                                    Toast.makeText(VerifyActivity.this, "Successfully Created", Toast.LENGTH_SHORT).show();                                    mDialog.dismiss();                                    finish();                                }                            });                            Intent intent = new Intent(VerifyActivity.this, MainActivity.class);                            intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);                            startActivity(intent);                        } else {                            Toast.makeText(VerifyActivity.this, task.getException().getMessage(), Toast.LENGTH_LONG).show();                        }                    }                });    }    private void sendVerificationCode(String number) {        PhoneAuthProvider.getInstance().verifyPhoneNumber(                number,                60,                TimeUnit.SECONDS,                TaskExecutors.MAIN_THREAD,                mCallBack        );        //progressBar.setVisibility(View.GONE);    }}