package com.beffjezos.carebuddy.ui.activities;import android.app.ProgressDialog;import android.database.Cursor;import android.os.Bundle;import android.view.View;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.EditText;import android.widget.Spinner;import android.widget.TextView;import android.widget.Toast;import androidx.annotation.NonNull;import androidx.appcompat.app.AppCompatActivity;import androidx.appcompat.widget.Toolbar;import androidx.cardview.widget.CardView;import com.afollestad.materialdialogs.DialogAction;import com.afollestad.materialdialogs.MaterialDialog;import com.beffjezos.carebuddy.R;import com.beffjezos.carebuddy.SqlDonor;import com.beffjezos.carebuddy.models.Charity;import com.beffjezos.carebuddy.models.Donation;import com.bumptech.glide.Glide;import com.bumptech.glide.request.RequestOptions;import com.google.android.gms.tasks.OnSuccessListener;import com.google.android.material.floatingactionbutton.FloatingActionButton;import com.google.android.material.snackbar.Snackbar;import com.google.firebase.database.FirebaseDatabase;import java.util.Objects;import de.hdodenhof.circleimageview.CircleImageView;public class DonateMoney extends AppCompatActivity implements AdapterView.OnItemSelectedListener {    String paymentMethod;    TextView nameTv, addressTv, numberTv, summeryTv, dateTv;    TextView money500, money1000, money5000, money10000;    EditText amountTv;    SqlDonor sqlDonor;    FloatingActionButton callBtn;    ProgressDialog mDialog;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_donate_money);        Toolbar toolbar = findViewById(R.id.toolbar);        setSupportActionBar(toolbar);        Objects.requireNonNull(getSupportActionBar()).setDisplayHomeAsUpEnabled(true);        getSupportActionBar().setDisplayShowHomeEnabled(true);        nameTv = findViewById(R.id.name);        addressTv = findViewById(R.id.addressCha2);        summeryTv = findViewById(R.id.textView8);        dateTv = findViewById(R.id.addressCha3);        amountTv = findViewById(R.id.amount);        callBtn = findViewById(R.id.floatingActionButton2);        CircleImageView logo = findViewById(R.id.textView6);        CardView donate = findViewById(R.id.cardView3);        sqlDonor = new SqlDonor(this);        final Charity charity = (Charity) getIntent().getSerializableExtra("charity");        assert charity != null;        toolbar.setTitle("Donate to " + charity.getName());        final Spinner spinner = findViewById(R.id.spinner);        money500 = findViewById(R.id.money500);        money1000 = findViewById(R.id.money1000);        money5000 = findViewById(R.id.money5000);        money10000 = findViewById(R.id.money10000);        mDialog = new ProgressDialog(this);        mDialog.setMessage("Please wait..");        mDialog.setIndeterminate(true);        mDialog.setCancelable(false);        mDialog.setCanceledOnTouchOutside(false);        ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, getResources().getStringArray(R.array.paymentMethods));        arrayAdapter.setDropDownViewResource(android.R.layout.simple_expandable_list_item_1);        spinner.setAdapter(arrayAdapter);        spinner.setOnItemSelectedListener(this);        try {            nameTv.setText(charity.getName());            addressTv.setText(charity.getLocation());            summeryTv.setText(charity.getSummery());            dateTv.setText(charity.getStubDate());            Glide.with(getApplicationContext())                    .setDefaultRequestOptions(new RequestOptions().placeholder(R.drawable.ic_flat))                    .load(charity.getLogo())                    .into(logo);        } catch (NullPointerException j) {        }        money500.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                performMoneyClick(500);            }        });        money1000.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                performMoneyClick(1000);            }        });        money5000.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                performMoneyClick(5000);            }        });        money10000.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                performMoneyClick(10000);            }        });        callBtn.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                performCall(charity.getNumber());            }        });        donate.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                if (paymentMethod.equals("bKash")) {                    Cursor rs = null;                    String donorName = "", donorNum = "", donorAddress = "";                    try {                        rs = sqlDonor.getData(1);                        rs.moveToFirst();                        donorName = rs.getString(rs.getColumnIndex(SqlDonor.CONTACTS_COLUMN_NAME));                        donorNum = rs.getString(rs.getColumnIndex(SqlDonor.CONTACTS_COLUMN_NUMBER));                        donorAddress = rs.getString(rs.getColumnIndex(SqlDonor.CONTACTS_COLUMN_ADDRESS));                    } catch (RuntimeException g) {                        Toast.makeText(getApplicationContext(), "Error", Toast.LENGTH_SHORT).show();                    }                    final long amountData = Long.parseLong(amountTv.getText().toString());                    startBkashPayment(donorNum, charity.getNumber(), amountData, charity.getId(), donorName, donorAddress);                } else if (paymentMethod.equals("Nagad")) {                    Cursor rs = null;                    String donorName = "", donorNum = "", donorAddress = "";                    try {                        rs = sqlDonor.getData(1);                        rs.moveToFirst();                        donorName = rs.getString(rs.getColumnIndex(SqlDonor.CONTACTS_COLUMN_NAME));                        donorNum = rs.getString(rs.getColumnIndex(SqlDonor.CONTACTS_COLUMN_NUMBER));                        donorAddress = rs.getString(rs.getColumnIndex(SqlDonor.CONTACTS_COLUMN_ADDRESS));                    } catch (RuntimeException g) {                        Toast.makeText(getApplicationContext(), "Error", Toast.LENGTH_SHORT).show();                    }                    final long amountData = Long.parseLong(amountTv.getText().toString());                    startBkashPayment(donorNum, charity.getNumber(), amountData, charity.getId(), donorName, donorAddress);                } else {                    Cursor rs = null;                    String donorName = "", donorNum = "", donorAddress = "";                    try {                        rs = sqlDonor.getData(1);                        rs.moveToFirst();                        donorName = rs.getString(rs.getColumnIndex(SqlDonor.CONTACTS_COLUMN_NAME));                        donorNum = rs.getString(rs.getColumnIndex(SqlDonor.CONTACTS_COLUMN_NUMBER));                        donorAddress = rs.getString(rs.getColumnIndex(SqlDonor.CONTACTS_COLUMN_ADDRESS));                    } catch (RuntimeException g) {                        Toast.makeText(getApplicationContext(), "Error", Toast.LENGTH_SHORT).show();                    }                    final long amountData = Long.parseLong(amountTv.getText().toString());                    startBkashPayment(donorNum, charity.getNumber(), amountData, charity.getId(), donorName, donorAddress);                }            }        });    }    private void performMoneyClick(int i) {        amountTv.setText("");        amountTv.setText(String.valueOf(i));    }    private void performCall(String number) {    }    @Override    public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {        paymentMethod = parent.getItemAtPosition(position).toString();    }    public void onNothingSelected(AdapterView<?> arg0) {        Snackbar.make(findViewById(R.id.layout), "Gender (optional)", Snackbar.LENGTH_SHORT).show();    }    @Override    public void onBackPressed() {        new MaterialDialog.Builder(this)                .title("Discard")                .content("Are you sure do you want to go back?")                .positiveText("Yes")                .canceledOnTouchOutside(false)                .cancelable(false)                .onPositive(new MaterialDialog.SingleButtonCallback() {                    @Override                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {                        DonateMoney.this.finish();                    }                })                .negativeText("No")                .show();    }    @Override    public void onPointerCaptureChanged(boolean hasCapture) {    }    private void startBkashPayment(String donorNum, String charityNum, long amount, String charityId, String donName, String donorAddress) {        String summery = "Donated " + amount + "à§³ via " + "bKash";        Donation donation = new Donation(donName, summery, donorNum, charityId, "cksdfafoadawpdibfef", donorAddress, "money", amount);        FirebaseDatabase.getInstance().getReference().child("Charities").child(charityId).child("Donations").push().setValue(donation).addOnSuccessListener(new OnSuccessListener<Void>() {            @Override            public void onSuccess(Void aVoid) {                Toast.makeText(getApplicationContext(), "Successfull", Toast.LENGTH_SHORT).show();                mDialog.dismiss();                finish();            }        });    }}