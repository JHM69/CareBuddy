package com.beffjezos.carebuddy.adapters;import android.content.Context;import android.content.Intent;import android.database.Cursor;import android.view.View;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import com.afollestad.materialdialogs.DialogAction;import com.afollestad.materialdialogs.MaterialDialog;import com.beffjezos.carebuddy.R;import com.beffjezos.carebuddy.SqlDonor;import com.beffjezos.carebuddy.models.Charity;import com.beffjezos.carebuddy.models.Package;import com.beffjezos.carebuddy.ui.activities.DonateMoney;import com.beffjezos.carebuddy.ui.activities.DonatePackage;import com.beffjezos.carebuddy.ui.activities.NewDonorReg;import com.bumptech.glide.Glide;import com.bumptech.glide.request.RequestOptions;import de.hdodenhof.circleimageview.CircleImageView;public class CharityViewHolder extends RecyclerView.ViewHolder {    TextView name, address, des;    CircleImageView logo;    String namhe = "";    Package aPackage;    public CharityViewHolder(@NonNull View itemView) {        super(itemView);        name = itemView.findViewById(R.id.nameCha);        address = itemView.findViewById(R.id.addressCha);        des = itemView.findViewById(R.id.desCha);        logo = itemView.findViewById(R.id.floatingActionButton3);    }    public void setItem(final Charity charity, final Context context, final Package dd) throws RuntimeException {        name.setText(charity.getName());        des.setText(charity.getStubDate());        Glide.with(context)                .setDefaultRequestOptions(new RequestOptions().placeholder(R.drawable.ic_flat))                .load(charity.getLogo())                .into(logo);        address.setText(charity.getLocation());        if (dd != null) {            itemView.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View view) {                    SqlDonor sqlDonor = new SqlDonor(context);                    Cursor rs = null;                    name = null;                    final String imag = null;                    rs = sqlDonor.getData(1);                    rs.moveToFirst();                    namhe = rs.getString(rs.getColumnIndex(SqlDonor.CONTACTS_COLUMN_NAME));                    if (!rs.isClosed()) rs.close();                    if (namhe != null) {                        context.startActivity(new Intent(context, DonatePackage.class).putExtra("1222", charity).putExtra("donateP", dd).setFlags(Intent.FLAG_ACTIVITY_NEW_TASK));                    } else {                        MaterialDialog dialog;                        new MaterialDialog.Builder(context)                                .title("You are not registered as a Donor")                                .content("Become a Donor to Donate?")                                .positiveText("Yes")                                .negativeText("No")                                .canceledOnTouchOutside(false)                                .cancelable(false)                                .onPositive(new MaterialDialog.SingleButtonCallback() {                                    private MaterialDialog dialog;                                    private DialogAction which;                                    @Override                                    public void onClick(@NonNull MaterialDialog dialog,                                                        @NonNull DialogAction which) {                                        this.dialog = dialog;                                        this.which = which;                                        context.startActivity(new Intent(context, NewDonorReg.class));                                    }                                })                                .onNegative(new MaterialDialog.SingleButtonCallback() {                                    @Override                                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {                                    }                                })                                .build().show();                    }                }            });        } else {            itemView.setOnClickListener(new View.OnClickListener() {                @Override                public void onClick(View view) {                    if (namhe != null) {                        context.startActivity(new Intent(context, DonateMoney.class).putExtra("charity", charity).setFlags(Intent.FLAG_ACTIVITY_NEW_TASK));                    } else {                        MaterialDialog dialog;                        new MaterialDialog.Builder(context)                                .title("You are not registered as a Donor")                                .content("Become a Donor to Donate?")                                .positiveText("Yes")                                .negativeText("No")                                .canceledOnTouchOutside(false)                                .cancelable(false)                                .onPositive(new MaterialDialog.SingleButtonCallback() {                                    @Override                                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {                                        context.startActivity(new Intent(context, NewDonorReg.class));                                    }                                })                                .onNegative(new MaterialDialog.SingleButtonCallback() {                                    @Override                                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {                                    }                                })                                .build().show();                    }                }            });        }    }    private void doThings() {    }}